public static class ObjectMapper
{
    private static readonly Lazy<IMapper> Lazy = new Lazy<IMapper>(() =>
    {
        var config = new MapperConfiguration(cfg =>
        {
            // This line ensures that internal properties are also mapped over.
            cfg.ShouldMapProperty = p => p.GetMethod.IsPublic || p.GetMethod.IsAssembly;
            cfg.AddProfile<CustomDtoMapper>();
        });
        var mapper = config.CreateMapper();
        return mapper;
    });

    public static IMapper Mapper => Lazy.Value;
}

public class CustomDtoMapper : Profile
{
    public CustomDtoMapper()
    {
        CreateMap<Entity, EntityDto>().ForMember(dto => dto.Currency, map => map.MapFrom(source => new Currency
          {
              Code = source.CurrencyCode,
              Value = source.CurrencyValue.ToString("0.00")
          }));

        // All other mappings goes here
    }
}


//Test
var config = new MapperConfiguration(cfg =>
            {
                cfg.CreateMap<Book, BookModel>().ForMember(book => book.Name, map => map.MapFrom(source => source.Bookname));
                cfg.CreateMap<Book, BookModel>().ForMember(book => book.AuthorName, map => map.MapFrom(source => source.Author.Authorname));
                cfg.CreateMap<Book, BookModel>().ForMember(book => book.PublisherName, map => map.MapFrom(source => source.Publisher.Publishname));
                cfg.CreateMap<Book, BookModel>().ForMember(book => book.Price, map => map.MapFrom(source => source.Price));
                cfg.CreateMap<Book, BookModel>().ForMember(book => book.Image, map => map.MapFrom(source => source.Image));
                cfg.CreateMap<Book, BookModel>().ForMember(book => book.Description, map => map.MapFrom(source => source.Description));
                cfg.CreateMap<Book, BookModel>().ForMember(book => book.CategoryName, map => map.MapFrom(source => source.Category.Categoryname));
                cfg.CreateMap<Book, BookModel>().ForMember(book => book.StorageQuantity, map => map.MapFrom(source => source.StorageQuantity));
            });
            _mapper = config.CreateMapper();